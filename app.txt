from flask import Flask, request, jsonify, send_file, render_template
from deep_translator import GoogleTranslator
from docx import Document
from bs4 import BeautifulSoup
from pdf2image import convert_from_path
import pytesseract
import os

# Configuration
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
UPLOAD_FOLDER = os.path.join(BASE_DIR, 'uploads')
OUTPUT_FOLDER = os.path.join(BASE_DIR, 'outputs')

os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(OUTPUT_FOLDER, exist_ok=True)

app = Flask(__name__)

# Translation helper
def translate_text(text, target_language):
    try:
        return GoogleTranslator(source='auto', target=target_language).translate(text)
    except Exception as e:
        print("Translation failed:", e)
        return None

# DOCX translator
def translate_docx(input_path, output_path, target_language):
    doc = Document(input_path)
    for para in doc.paragraphs:
        if para.text.strip():
            translated = translate_text(para.text, target_language)
            para.text = translated if translated else para.text
    doc.save(output_path)

# HTML translator
def translate_html(input_path, output_path, target_language):
    with open(input_path, 'r', encoding='utf-8') as f:
        soup = BeautifulSoup(f, 'html.parser')
    for tag in soup.find_all(text=True):
        if tag.strip():
            translated = translate_text(tag, target_language)
            tag.replace_with(translated if translated else tag)
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(str(soup.prettify()))

# PDF translator using OCR
def translate_pdf(input_path, output_path, target_language):
    images = convert_from_path(input_path)
    full_text = ""
    for img in images:
        full_text += pytesseract.image_to_string(img) + "\n"
    translated = translate_text(full_text, target_language) or full_text
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(translated)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    try:
        if 'file' not in request.files:
            return jsonify({'error': 'No file part'}), 400
        file = request.files['file']
        if file.filename == '':
            return jsonify({'error': 'No selected file'}), 400

        target_language = request.form.get('target_language', 'en')
        filename = file.filename
        input_path = os.path.join(UPLOAD_FOLDER, filename)
        file.save(input_path)

        name, ext = os.path.splitext(filename)
        ext = ext.lower()
        output_filename = f"{name}_translated{ext if ext != '.pdf' else '.txt'}"
        output_path = os.path.join(OUTPUT_FOLDER, output_filename)

        if ext == '.docx':
            translate_docx(input_path, output_path, target_language)
        elif ext in ['.html', '.htm']:
            translate_html(input_path, output_path, target_language)
        elif ext == '.txt':
            with open(input_path, 'r', encoding='utf-8') as f:
                text = f.read()
            translated = translate_text(text, target_language) or text
            with open(output_path, 'w', encoding='utf-8') as f:
                f.write(translated)
        elif ext == '.pdf':
            translate_pdf(input_path, output_path, target_language)
        else:
            return jsonify({'error': 'Unsupported file type'}), 400

        return send_file(output_path, as_attachment=True)
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)
